import { MD3LightTheme, MD3DarkTheme } from 'react-native-paper';

export const Theme = {
  light: {
    ...MD3LightTheme,
    colors: {
      ...MD3LightTheme.colors,
      primary: 'rgb(0, 102, 137)',
      onPrimary: 'rgb(255, 255, 255)',
      primaryContainer: 'rgb(195, 232, 255)',
      onPrimaryContainer: 'rgb(0, 30, 44)',
      secondary: 'rgb(16, 109, 32)',
      onSecondary: 'rgb(255, 255, 255)',
      secondaryContainer: 'rgb(157, 248, 152)',
      onSecondaryContainer: 'rgb(0, 34, 4)',
      tertiary: 'rgb(185, 12, 85)',
      onTertiary: 'rgb(255, 255, 255)',
      tertiaryContainer: 'rgb(255, 217, 223)',
      onTertiaryContainer: 'rgb(63, 0, 24)',
      error: 'rgb(186, 26, 26)',
      onError: 'rgb(255, 255, 255)',
      errorContainer: 'rgb(255, 218, 214)',
      onErrorContainer: 'rgb(65, 0, 2)',
      background: 'rgb(251, 252, 255)',
      onBackground: 'rgb(25, 28, 30)',
      surface: 'rgb(251, 252, 255)',
      onSurface: 'rgb(25, 28, 30)',
      surfaceVariant: 'rgb(220, 227, 233)',
      onSurfaceVariant: 'rgb(65, 72, 77)',
      outline: 'rgb(113, 120, 125)',
      outlineVariant: 'rgb(192, 199, 205)',
      shadow: 'rgb(0, 0, 0)',
      scrim: 'rgb(0, 0, 0)',
      inverseSurface: 'rgb(46, 49, 51)',
      inverseOnSurface: 'rgb(240, 241, 243)',
      inversePrimary: 'rgb(122, 208, 255)',
      elevation: {
        level0: 'transparent',
        level1: 'rgb(238, 245, 249)',
        level2: 'rgb(231, 240, 246)',
        level3: 'rgb(223, 236, 242)',
        level4: 'rgb(221, 234, 241)',
        level5: 'rgb(216, 231, 239)',
      },
      surfaceDisabled: 'rgba(25, 28, 30, 0.12)',
      onSurfaceDisabled: 'rgba(25, 28, 30, 0.38)',
      backdrop: 'rgba(42, 49, 54, 0.4)',
    },
  },
  dark: {
    ...MD3DarkTheme,
    colors: {
      ...MD3DarkTheme.colors,
      primary: 'rgb(122, 208, 255)',
      onPrimary: 'rgb(0, 53, 73)',
      primaryContainer: 'rgb(0, 76, 104)',
      onPrimaryContainer: 'rgb(195, 232, 255)',
      secondary: 'rgb(130, 219, 126)',
      onSecondary: 'rgb(0, 57, 10)',
      secondaryContainer: 'rgb(0, 83, 18)',
      onSecondaryContainer: 'rgb(157, 248, 152)',
      tertiary: 'rgb(255, 177, 194)',
      onTertiary: 'rgb(102, 0, 43)',
      tertiaryContainer: 'rgb(143, 0, 63)',
      onTertiaryContainer: 'rgb(255, 217, 223)',
      error: 'rgb(255, 180, 171)',
      onError: 'rgb(105, 0, 5)',
      errorContainer: 'rgb(147, 0, 10)',
      onErrorContainer: 'rgb(255, 180, 171)',
      background: 'rgb(25, 28, 30)',
      onBackground: 'rgb(225, 226, 229)',
      surface: 'rgb(25, 28, 30)',
      onSurface: 'rgb(225, 226, 229)',
      surfaceVariant: 'rgb(65, 72, 77)',
      onSurfaceVariant: 'rgb(192, 199, 205)',
      outline: 'rgb(138, 146, 151)',
      outlineVariant: 'rgb(65, 72, 77)',
      shadow: 'rgb(0, 0, 0)',
      scrim: 'rgb(0, 0, 0)',
      inverseSurface: 'rgb(225, 226, 229)',
      inverseOnSurface: 'rgb(46, 49, 51)',
      inversePrimary: 'rgb(0, 102, 137)',
      elevation: {
        level0: 'transparent',
        level1: 'rgb(30, 37, 41)',
        level2: 'rgb(33, 42, 48)',
        level3: 'rgb(36, 48, 55)',
        level4: 'rgb(37, 50, 57)',
        level5: 'rgb(39, 53, 62)',
      },
      surfaceDisabled: 'rgba(225, 226, 229, 0.12)',
      onSurfaceDisabled: 'rgba(225, 226, 229, 0.38)',
      backdrop: 'rgba(42, 49, 54, 0.4)',
    },
  },
};
